/*
 * Created on 15 Dec 2015 ( Time 14:53:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.trams.webbook.bean.CouponUsed;
import org.trams.webbook.business.service.CouponUsedService;
import org.trams.webbook.web.listitem.CouponUsedListItem;

/**
 * Spring MVC controller for 'CouponUsed' management.
 */
@Controller
public class CouponUsedRestController {

	@Resource
	private CouponUsedService couponUsedService;
	
	@RequestMapping( value="/api/items/couponUsed",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<CouponUsedListItem> findAllAsListItems() {
		List<CouponUsed> list = couponUsedService.findAll();
		List<CouponUsedListItem> items = new LinkedList<CouponUsedListItem>();
		for ( CouponUsed couponUsed : list ) {
			items.add(new CouponUsedListItem( couponUsed ) );
		}
		return items;
	}
	
	@RequestMapping( value="/api/couponUsed",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<CouponUsed> findAll() {
		return couponUsedService.findAll();
	}

	@RequestMapping( value="/api/couponUsed/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public CouponUsed findOne(@PathVariable("id") Integer id) {
		return couponUsedService.findById(id);
	}
	
	@RequestMapping( value="/api/couponUsed",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public CouponUsed create(@RequestBody CouponUsed couponUsed) {
		return couponUsedService.create(couponUsed);
	}

	@RequestMapping( value="/api/couponUsed/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public CouponUsed update(@PathVariable("id") Integer id, @RequestBody CouponUsed couponUsed) {
		return couponUsedService.update(couponUsed);
	}

	@RequestMapping( value="/api/couponUsed/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		couponUsedService.delete(id);
	}
	
}
