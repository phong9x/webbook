/*
 * Created on 16 Jan 2016 ( Time 10:42:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.trams.webbook.bean.BookViewing;
import org.trams.webbook.business.service.BookViewingService;
import org.trams.webbook.web.listitem.BookViewingListItem;

/**
 * Spring MVC controller for 'BookViewing' management.
 */
@Controller
public class BookViewingRestController {

	@Resource
	private BookViewingService bookViewingService;
	
	@RequestMapping( value="/api/items/bookViewing",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookViewingListItem> findAllAsListItems() {
		List<BookViewing> list = bookViewingService.findAll();
		List<BookViewingListItem> items = new LinkedList<BookViewingListItem>();
		for ( BookViewing bookViewing : list ) {
			items.add(new BookViewingListItem( bookViewing ) );
		}
		return items;
	}
	
	@RequestMapping( value="/api/bookViewing",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookViewing> findAll() {
		return bookViewingService.findAll();
	}

	@RequestMapping( value="/api/bookViewing/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookViewing findOne(@PathVariable("id") Integer id) {
		return bookViewingService.findById(id);
	}
	
	@RequestMapping( value="/api/bookViewing",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookViewing create(@RequestBody BookViewing bookViewing) {
		return bookViewingService.create(bookViewing);
	}

	@RequestMapping( value="/api/bookViewing/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookViewing update(@PathVariable("id") Integer id, @RequestBody BookViewing bookViewing) {
		return bookViewingService.update(bookViewing);
	}

	@RequestMapping( value="/api/bookViewing/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		bookViewingService.delete(id);
	}
	
}
