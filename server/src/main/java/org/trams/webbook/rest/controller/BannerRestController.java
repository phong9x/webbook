/*
 * Created on 15 Dec 2015 ( Time 14:53:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.trams.webbook.bean.Banner;
import org.trams.webbook.business.service.BannerService;
import org.trams.webbook.web.listitem.BannerListItem;

/**
 * Spring MVC controller for 'Banner' management.
 */
@Controller
public class BannerRestController {

	@Resource
	private BannerService bannerService;
	
	@RequestMapping( value="/api/items/banner",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BannerListItem> findAllAsListItems() {
		List<Banner> list = bannerService.findAll();
		List<BannerListItem> items = new LinkedList<BannerListItem>();
		for ( Banner banner : list ) {
			items.add(new BannerListItem( banner ) );
		}
		return items;
	}
	
	@RequestMapping( value="/api/banner",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Banner> findAll() {
		return bannerService.findAll();
	}

	@RequestMapping( value="/api/banner/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Banner findOne(@PathVariable("id") Integer id) {
		return bannerService.findById(id);
	}
	
	@RequestMapping( value="/api/banner",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Banner create(@RequestBody Banner banner) {
		return bannerService.create(banner);
	}

	@RequestMapping( value="/api/banner/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Banner update(@PathVariable("id") Integer id, @RequestBody Banner banner) {
		return bannerService.update(banner);
	}

	@RequestMapping( value="/api/banner/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		bannerService.delete(id);
	}
	
}
