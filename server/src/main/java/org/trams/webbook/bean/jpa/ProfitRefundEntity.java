/*
 * Created on 13 Jan 2016 ( Time 11:09:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.webbook.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "profit_refund"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="profit_refund", catalog="webbook" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ProfitRefundEntity.countAll", query="SELECT COUNT(x) FROM ProfitRefundEntity x" )
} )
public class ProfitRefundEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="_id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="DEPOSIT_AMOUNT")
    private Double     depositAmount ;

    @Column(name="NAME", length=300)
    private String     name         ;

    @Column(name="RESIDENT_NUMBER", length=300)
    private String     residentNumber ;

    @Column(name="CELL_PHONE", length=15)
    private String     cellPhone    ;

    @Column(name="EMAIL", length=300)
    private String     email        ;

    @Column(name="ADDRESS", length=300)
    private String     address      ;

    @Column(name="ACCOUNT_HOLDER_NAME", length=300)
    private String     accountHolderName ;

    @Column(name="RELATIONSHIP", length=200)
    private String     relationship ;

    @Column(name="BANK_ID")
    private Integer    bankId       ;

    @Column(name="BANK_NAME", length=200)
    private String     bankName     ;

    @Column(name="ACCOUNT_NUMBER", length=200)
    private String     accountNumber ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="APPLICATION_DATE")
    private Date       applicationDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="DEPOSIT_DATE")
    private Date       depositDate  ;

    @Column(name="DEPOSITED")
    private Integer    deposited    ;

    @Column(name="IS_DELETE")
    private Integer    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE")
    private Date       updateDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE")
    private Date       createDate   ;

	// "userId" (column "USER_ID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="USER_ID", referencedColumnName="_id")
    private UserEntity user        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ProfitRefundEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : DEPOSIT_AMOUNT ( DOUBLE ) 
    public void setDepositAmount( Double depositAmount ) {
        this.depositAmount = depositAmount;
    }
    public Double getDepositAmount() {
        return this.depositAmount;
    }

    //--- DATABASE MAPPING : NAME ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : RESIDENT_NUMBER ( VARCHAR ) 
    public void setResidentNumber( String residentNumber ) {
        this.residentNumber = residentNumber;
    }
    public String getResidentNumber() {
        return this.residentNumber;
    }

    //--- DATABASE MAPPING : CELL_PHONE ( VARCHAR ) 
    public void setCellPhone( String cellPhone ) {
        this.cellPhone = cellPhone;
    }
    public String getCellPhone() {
        return this.cellPhone;
    }

    //--- DATABASE MAPPING : EMAIL ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : ADDRESS ( VARCHAR ) 
    public void setAddress( String address ) {
        this.address = address;
    }
    public String getAddress() {
        return this.address;
    }

    //--- DATABASE MAPPING : ACCOUNT_HOLDER_NAME ( VARCHAR ) 
    public void setAccountHolderName( String accountHolderName ) {
        this.accountHolderName = accountHolderName;
    }
    public String getAccountHolderName() {
        return this.accountHolderName;
    }

    //--- DATABASE MAPPING : RELATIONSHIP ( VARCHAR ) 
    public void setRelationship( String relationship ) {
        this.relationship = relationship;
    }
    public String getRelationship() {
        return this.relationship;
    }

    //--- DATABASE MAPPING : BANK_ID ( INT ) 
    public void setBankId( Integer bankId ) {
        this.bankId = bankId;
    }
    public Integer getBankId() {
        return this.bankId;
    }

    //--- DATABASE MAPPING : BANK_NAME ( VARCHAR ) 
    public void setBankName( String bankName ) {
        this.bankName = bankName;
    }
    public String getBankName() {
        return this.bankName;
    }

    //--- DATABASE MAPPING : ACCOUNT_NUMBER ( VARCHAR ) 
    public void setAccountNumber( String accountNumber ) {
        this.accountNumber = accountNumber;
    }
    public String getAccountNumber() {
        return this.accountNumber;
    }

    //--- DATABASE MAPPING : APPLICATION_DATE ( DATETIME ) 
    public void setApplicationDate( Date applicationDate ) {
        this.applicationDate = applicationDate;
    }
    public Date getApplicationDate() {
        return this.applicationDate;
    }

    //--- DATABASE MAPPING : DEPOSIT_DATE ( DATETIME ) 
    public void setDepositDate( Date depositDate ) {
        this.depositDate = depositDate;
    }
    public Date getDepositDate() {
        return this.depositDate;
    }

    //--- DATABASE MAPPING : DEPOSITED ( INT ) 
    public void setDeposited( Integer deposited ) {
        this.deposited = deposited;
    }
    public Integer getDeposited() {
        return this.deposited;
    }

    //--- DATABASE MAPPING : IS_DELETE ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : UPDATE_DATE ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : CREATE_DATE ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(depositAmount);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(residentNumber);
        sb.append("|");
        sb.append(cellPhone);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(address);
        sb.append("|");
        sb.append(accountHolderName);
        sb.append("|");
        sb.append(relationship);
        sb.append("|");
        sb.append(bankId);
        sb.append("|");
        sb.append(bankName);
        sb.append("|");
        sb.append(accountNumber);
        sb.append("|");
        sb.append(applicationDate);
        sb.append("|");
        sb.append(depositDate);
        sb.append("|");
        sb.append(deposited);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(createDate);
        return sb.toString(); 
    } 

}
