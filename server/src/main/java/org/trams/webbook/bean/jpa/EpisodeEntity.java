/*
 * Created on 16 Feb 2016 ( Time 10:48:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.webbook.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "episode"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="episode", catalog="webbook" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="EpisodeEntity.countAll", query="SELECT COUNT(x) FROM EpisodeEntity x" )
} )
public class EpisodeEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="_id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="EPISODE_NUMBER")
    private Integer    episodeNumber ;

    @Column(name="TITLE", length=300)
    private String     title        ;

    @Column(name="CONTENT")
    private String     content      ;

    @Column(name="EPILOGUE", length=300)
    private String     epilogue     ;

    @Column(name="PRICE")
    private Integer    price        ;

    @Column(name="RATIO")
    private Integer    ratio        ;

    @Column(name="SALES_NUMBER")
    private Integer    salesNumber  ;

    @Column(name="AMOUNT")
    private Double     amount       ;

    @Column(name="HITS_NO")
    private Integer    hitsNo       ;

    @Column(name="RECOMMONDATION_NO")
    private Integer    recommondationNo ;

    @Column(name="REVIEW_NO")
    private Integer    reviewNo     ;

    @Column(name="COMPLETE")
    private Integer    complete     ;

    @Column(name="TEMPORARY_SAVE")
    private Integer    temporarySave ;

    @Column(name="IS_SHOW")
    private Integer    isShow       ;

    @Column(name="IS_DELETE")
    private Integer    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE")
    private Date       createDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE")
    private Date       updateDate   ;

    @Column(name="VIEW_NO")
    private Integer    viewNo       ;

	// "bookId" (column "BOOK_ID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="episode", targetEntity=BookmarkEntity.class)
    private List<BookmarkEntity> listOfBookmark;

    @OneToMany(mappedBy="episode", targetEntity=CouponUsedEntity.class)
    private List<CouponUsedEntity> listOfCouponUsed;

    @ManyToOne
    @JoinColumn(name="BOOK_ID", referencedColumnName="_id")
    private BookEntity book        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public EpisodeEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : EPISODE_NUMBER ( INT ) 
    public void setEpisodeNumber( Integer episodeNumber ) {
        this.episodeNumber = episodeNumber;
    }
    public Integer getEpisodeNumber() {
        return this.episodeNumber;
    }

    //--- DATABASE MAPPING : TITLE ( VARCHAR ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : CONTENT ( TEXT ) 
    public void setContent( String content ) {
        this.content = content;
    }
    public String getContent() {
        return this.content;
    }

    //--- DATABASE MAPPING : EPILOGUE ( VARCHAR ) 
    public void setEpilogue( String epilogue ) {
        this.epilogue = epilogue;
    }
    public String getEpilogue() {
        return this.epilogue;
    }

    //--- DATABASE MAPPING : PRICE ( INT ) 
    public void setPrice( Integer price ) {
        this.price = price;
    }
    public Integer getPrice() {
        return this.price;
    }

    //--- DATABASE MAPPING : RATIO ( INT ) 
    public void setRatio( Integer ratio ) {
        this.ratio = ratio;
    }
    public Integer getRatio() {
        return this.ratio;
    }

    //--- DATABASE MAPPING : SALES_NUMBER ( INT ) 
    public void setSalesNumber( Integer salesNumber ) {
        this.salesNumber = salesNumber;
    }
    public Integer getSalesNumber() {
        return this.salesNumber;
    }

    //--- DATABASE MAPPING : AMOUNT ( DOUBLE ) 
    public void setAmount( Double amount ) {
        this.amount = amount;
    }
    public Double getAmount() {
        return this.amount;
    }

    //--- DATABASE MAPPING : HITS_NO ( INT ) 
    public void setHitsNo( Integer hitsNo ) {
        this.hitsNo = hitsNo;
    }
    public Integer getHitsNo() {
        return this.hitsNo;
    }

    //--- DATABASE MAPPING : RECOMMONDATION_NO ( INT ) 
    public void setRecommondationNo( Integer recommondationNo ) {
        this.recommondationNo = recommondationNo;
    }
    public Integer getRecommondationNo() {
        return this.recommondationNo;
    }

    //--- DATABASE MAPPING : REVIEW_NO ( INT ) 
    public void setReviewNo( Integer reviewNo ) {
        this.reviewNo = reviewNo;
    }
    public Integer getReviewNo() {
        return this.reviewNo;
    }

    //--- DATABASE MAPPING : COMPLETE ( INT ) 
    public void setComplete( Integer complete ) {
        this.complete = complete;
    }
    public Integer getComplete() {
        return this.complete;
    }

    //--- DATABASE MAPPING : TEMPORARY_SAVE ( INT ) 
    public void setTemporarySave( Integer temporarySave ) {
        this.temporarySave = temporarySave;
    }
    public Integer getTemporarySave() {
        return this.temporarySave;
    }

    //--- DATABASE MAPPING : IS_SHOW ( INT ) 
    public void setIsShow( Integer isShow ) {
        this.isShow = isShow;
    }
    public Integer getIsShow() {
        return this.isShow;
    }

    //--- DATABASE MAPPING : IS_DELETE ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : CREATE_DATE ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }

    //--- DATABASE MAPPING : UPDATE_DATE ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : VIEW_NO ( INT ) 
    public void setViewNo( Integer viewNo ) {
        this.viewNo = viewNo;
    }
    public Integer getViewNo() {
        return this.viewNo;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfBookmark( List<BookmarkEntity> listOfBookmark ) {
        this.listOfBookmark = listOfBookmark;
    }
    public List<BookmarkEntity> getListOfBookmark() {
        return this.listOfBookmark;
    }

    public void setListOfCouponUsed( List<CouponUsedEntity> listOfCouponUsed ) {
        this.listOfCouponUsed = listOfCouponUsed;
    }
    public List<CouponUsedEntity> getListOfCouponUsed() {
        return this.listOfCouponUsed;
    }

    public void setBook( BookEntity book ) {
        this.book = book;
    }
    public BookEntity getBook() {
        return this.book;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(episodeNumber);
        sb.append("|");
        sb.append(title);
        // attribute 'content' not usable (type = String Long Text)
        sb.append("|");
        sb.append(epilogue);
        sb.append("|");
        sb.append(price);
        sb.append("|");
        sb.append(ratio);
        sb.append("|");
        sb.append(salesNumber);
        sb.append("|");
        sb.append(amount);
        sb.append("|");
        sb.append(hitsNo);
        sb.append("|");
        sb.append(recommondationNo);
        sb.append("|");
        sb.append(reviewNo);
        sb.append("|");
        sb.append(complete);
        sb.append("|");
        sb.append(temporarySave);
        sb.append("|");
        sb.append(isShow);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(createDate);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(viewNo);
        return sb.toString(); 
    } 

}
