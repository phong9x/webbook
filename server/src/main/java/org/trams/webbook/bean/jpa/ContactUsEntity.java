/*
 * Created on 2 Mar 2016 ( Time 13:16:32 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.trams.webbook.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "contact_us"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="contact_us", catalog="webbook" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ContactUsEntity.countAll", query="SELECT COUNT(x) FROM ContactUsEntity x" )
} )
public class ContactUsEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="_id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="TITLE", length=300)
    private String     title        ;

    @Column(name="CONTENTS")
    private String     contents     ;

    @Column(name="FILE1", length=500)
    private String     file1        ;

    @Column(name="FILE2", length=500)
    private String     file2        ;

    @Column(name="REPORT_NUMBER")
    private Integer    reportNumber ;

    @Column(name="VIEWS_NUMBER")
    private Integer    viewsNumber  ;

    @Column(name="IS_DELETE")
    private Integer    isDelete     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE")
    private Date       updateDate   ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE")
    private Date       createDate   ;

	// "userId" (column "USER_ID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="USER_ID", referencedColumnName="_id")
    private UserEntity user        ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ContactUsEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : TITLE ( VARCHAR ) 
    public void setTitle( String title ) {
        this.title = title;
    }
    public String getTitle() {
        return this.title;
    }

    //--- DATABASE MAPPING : CONTENTS ( LONGTEXT ) 
    public void setContents( String contents ) {
        this.contents = contents;
    }
    public String getContents() {
        return this.contents;
    }

    //--- DATABASE MAPPING : FILE1 ( VARCHAR ) 
    public void setFile1( String file1 ) {
        this.file1 = file1;
    }
    public String getFile1() {
        return this.file1;
    }

    //--- DATABASE MAPPING : FILE2 ( VARCHAR ) 
    public void setFile2( String file2 ) {
        this.file2 = file2;
    }
    public String getFile2() {
        return this.file2;
    }

    //--- DATABASE MAPPING : REPORT_NUMBER ( INT UNSIGNED ) 
    public void setReportNumber( Integer reportNumber ) {
        this.reportNumber = reportNumber;
    }
    public Integer getReportNumber() {
        return this.reportNumber;
    }

    //--- DATABASE MAPPING : VIEWS_NUMBER ( INT ) 
    public void setViewsNumber( Integer viewsNumber ) {
        this.viewsNumber = viewsNumber;
    }
    public Integer getViewsNumber() {
        return this.viewsNumber;
    }

    //--- DATABASE MAPPING : IS_DELETE ( INT ) 
    public void setIsDelete( Integer isDelete ) {
        this.isDelete = isDelete;
    }
    public Integer getIsDelete() {
        return this.isDelete;
    }

    //--- DATABASE MAPPING : UPDATE_DATE ( DATETIME ) 
    public void setUpdateDate( Date updateDate ) {
        this.updateDate = updateDate;
    }
    public Date getUpdateDate() {
        return this.updateDate;
    }

    //--- DATABASE MAPPING : CREATE_DATE ( DATETIME ) 
    public void setCreateDate( Date createDate ) {
        this.createDate = createDate;
    }
    public Date getCreateDate() {
        return this.createDate;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(title);
        // attribute 'contents' not usable (type = String Long Text)
        sb.append("|");
        sb.append(file1);
        sb.append("|");
        sb.append(file2);
        sb.append("|");
        sb.append(reportNumber);
        sb.append("|");
        sb.append(viewsNumber);
        sb.append("|");
        sb.append(isDelete);
        sb.append("|");
        sb.append(updateDate);
        sb.append("|");
        sb.append(createDate);
        return sb.toString(); 
    } 

}
