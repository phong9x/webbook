/*
 * Created on 11 Jan 2016 ( Time 09:41:22 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.web.admin.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.trams.webbook.web.common.AbstractController;
import org.trams.webbook.web.common.FormMode;
import org.trams.webbook.web.common.Pager;
import org.trams.webbook.web.common.Login;
import org.trams.webbook.web.common.Message;
import org.trams.webbook.web.common.MessageType;
import org.trams.webbook.bean.jpa.CategoryEntity;

//--- Entities
import org.trams.webbook.bean.Category;

//--- Services 
import org.trams.webbook.business.service.CategoryService;


/**
 * Spring MVC controller for 'Category' management.
 */
@Controller
@RequestMapping("/admin/keyword")
public class KeywordAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "category";
	private static final String MAIN_LIST_NAME = "list";

	private static final String TOTAL_PAGE   = "pages";

	private static final String CURRENT_PAGE   = "pageNumber";

	private static final String LIST_PAGES   = "listPages";

	private static final Integer PAGE_SIZE   = 15;

	private static String nav = "keyword";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_KEYWORD   = "admin/keyword";

	private static final String JSP_LOGIN   = "redirect:/admin/login";

	//--- Main entity service
	@Resource
    private CategoryService categoryService; // Injected by Spring
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public KeywordAdminController() {
		super(KeywordAdminController.class, MAIN_ENTITY_NAME );
		log("CategoryAdminController created.");
	}
	//Decription: Get list all keyword
	//Url: http://kwebsosul.com/admin/episode/admin/keyword
	@RequestMapping("")
	public String list(
			@RequestParam(value="key1",defaultValue="") String[] keyword1,
			@RequestParam(value="key2",defaultValue="") String[] keyword2,
			@RequestParam(value="key3",defaultValue="") String[] keyword3,
			@RequestParam(value="key4",defaultValue="") String[] keyword4,
			@RequestParam(value="edit",defaultValue="0") Integer edit,
			
			HttpSession session,
			Model model) {
		if(Login.checkAdminLogin(session)=="0")
			return JSP_LOGIN;
		if(edit>0){
			try {
				categoryService.deleteKeyword();
				for (int i = 0; i < keyword1.length; i++) {
					if(keyword1[i]!=null && !keyword1[i].trim().equalsIgnoreCase("")){
						Category c =new Category();
						c.setCatname(keyword1[i]);
						c.setCreatedate(new Date());
						c.setDescription("로맨스");
						c.setGroupid(6);
						c.setGroupname("Keyword 1");
						c.setUpdatedate(new Date());
						categoryService.create(c);
					}
				}
				for (int i = 0; i < keyword2.length; i++) {
					if(keyword2[i]!=null && !keyword2[i].trim().equalsIgnoreCase("")){
						Category c =new Category();
						c.setCatname(keyword2[i]);
						c.setCreatedate(new Date());
						c.setDescription("판타지");
						c.setGroupid(7);
						c.setGroupname("Keyword 2");
						c.setUpdatedate(new Date());
						categoryService.create(c);
					}
				}
				for (int i = 0; i < keyword3.length; i++) {
					if(keyword3[i]!=null && !keyword3[i].trim().equalsIgnoreCase("")){
						Category c =new Category();
						c.setCatname(keyword3[i]);
						c.setCreatedate(new Date());
						c.setDescription("무협");
						c.setGroupid(8);
						c.setGroupname("Keyword 3");
						c.setUpdatedate(new Date());
						categoryService.create(c);
					}
				}
				
				for (int i = 0; i < keyword4.length; i++) {
					if(keyword4[i]!=null &&!keyword4[i].trim().equalsIgnoreCase("")){
						Category c =new Category();
						c.setCatname(keyword4[i]);
						c.setCreatedate(new Date());
						c.setDescription("퓨전/기타");
						c.setGroupid(9);
						c.setGroupname("Keyword 4");
						c.setUpdatedate(new Date());
						categoryService.create(c);
					}
				}
			} catch (Exception e) {
				System.err.println(e);
			}

			
			
			
		}
		model.addAttribute("list1", categoryService.findByGroupId(6));	
		model.addAttribute("list2", categoryService.findByGroupId(7));
		model.addAttribute("list3", categoryService.findByGroupId(8));
		model.addAttribute("list4", categoryService.findByGroupId(9));
		model.addAttribute("activePage", nav);
		return JSP_KEYWORD;
	}

	

}
