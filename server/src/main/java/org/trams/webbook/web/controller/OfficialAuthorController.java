/*

 * Created on 15 Dec 2015 ( Time 14:50:18 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.web.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
//--- Common classes
import org.trams.webbook.web.common.AbstractController;
import org.trams.webbook.web.common.ApplicationDefine;
import org.trams.webbook.web.common.Pager;
import org.trams.webbook.web.common.Login;
import org.trams.webbook.bean.User;
import org.trams.webbook.bean.jpa.BookEntity;
import org.trams.webbook.web.common.Utils;
//--- Entities
import org.trams.webbook.business.service.BookService;
import org.trams.webbook.business.service.CategoryService;
//--- Services 
import org.trams.webbook.business.service.UserService;

/**
 * Spring MVC controller for 'User' management.
 */
@Controller
@RequestMapping("/official-author")
public class OfficialAuthorController extends AbstractController {

	// --- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "user";

	private static final Integer PAGE_SIZE   = 10;

	// --- SAVE ACTION ( in the HTML form )
	private static final String INDEX = "official_author";
	private static String nav = "official";

	// --- Main entity service
	@Resource
	private UserService userService; // Injected by Spring
	// --- Other service(s)
	@Resource
	private CategoryService categoryService;
	@Resource
    private BookService bookService;
	// --------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public OfficialAuthorController() {
		super(OfficialAuthorController.class, MAIN_ENTITY_NAME);
		log("OfficialAuthorController created.");
	}

	// --------------------------------------------------------------------------------------
	// Spring MVC model management
	// --------------------------------------------------------------------------------------
	
	//Decription: Show official-author
	//Url       : http://kwebsosul.com/official-author
	@RequestMapping("")
	public String index(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="time_m",defaultValue="") String time_m,
			@RequestParam(value="time",defaultValue="") String time,
			@RequestParam(value="adult",defaultValue="") String adult,
			@RequestParam(value="author",defaultValue="작가관") String author,
			@RequestParam(value="category",defaultValue="오늘") String category,
			@RequestParam(value="genre_option",defaultValue="") String genre_option,
			@RequestParam(value="sort",defaultValue="추천수") String sort,
			HttpSession session, Model model) {
		Page<BookEntity> list = null;
		
		model.addAttribute("required_adult", 0);
		try {

			
			String dateTime = "";
			if(adult==null){
				adult="";
			}
			
			time = time_m;
			if(time_m == null || time_m.equals("전체")){
				dateTime="";
			}else{
				dateTime = time_m;
			}
			
			if(genre_option == null || genre_option.equalsIgnoreCase("전체")){
				genre_option = "";
			}
			if(sort == null)
				sort = "";
			String orderBy = "recommendationNo";
			if(sort != null){
				if(sort.equals("조회수")){
					orderBy = "hitsNo";
				}else if(sort.equals("관심작수")){
					orderBy = "interestedBookNo";
				} else if(sort.equals("추천수")){
					orderBy = "recommendationNo";
				} else if(sort.equals("전체")){
					orderBy = "createDate";
				}else{
					orderBy = "recommendationNo";
				}
			}
			if(category.equalsIgnoreCase("오늘")){
				if(genre_option.equalsIgnoreCase("완결작")){
					list = bookService.searchOfficalAuthorBy_Time_Author_Gender_Complete("%"+dateTime+"%","%%" , "%일반%",1,23, page, PAGE_SIZE, orderBy);
				}else{
					list = bookService.searchOfficalAuthorBy_Time_Author_Gender("%"+dateTime+"%","%"+genre_option+"%" , "%일반%",23, page, PAGE_SIZE, orderBy);
				}
			}else if(category.equalsIgnoreCase("성인")){
				if(Login.checkLogin(session)=="0")
					return "redirect:/login";
				User u =Login.getUserLogin(session);
				u=userService.findById(u.getId());
				model.addAttribute("u", u);
				if(u.getAdultVerification()==null || u.getAdultVerification()==0){
					model.addAttribute("required_adult", 1);
					model.addAttribute("totalCount", 0);
				}else{
					 if(author.equalsIgnoreCase("completed")){
						list = bookService.searchBy_Time_Author_Gender_Complete("%"+dateTime+"%","%"+genre_option+"%" , "%성인%",1,page, PAGE_SIZE, orderBy);
					}else{
						list = bookService.searchBy_Time_Author_Gender("%"+dateTime+"%","%"+genre_option+"%" , "%성인%","%"+author+"%", page, PAGE_SIZE, orderBy);
					}
				}
			}else if(category.equalsIgnoreCase("완결작")){
				list = bookService.searchOfficalAuthorBy_Time_Author_Gender_Complete("%"+dateTime+"%","%"+genre_option+"%" , "%일반%",1, 23,page, PAGE_SIZE, orderBy);
			}else{
				list = bookService.searchOfficalAuthorBy_Time_Author_Gender("%"+dateTime+"%","%"+category+"%" ,"%일반%",23, page, PAGE_SIZE, orderBy);
			}
		} catch (Exception e) {
			System.out
			.println(e);
		}
		if(list!=null){
			if (category == "오늘"  || category == "완결작"){
				new Pager<BookEntity>(list).setSetting(model, "category="+category+"&time="+time+"&title_m="+time_m+"&genre_option="+genre_option+"&sort="+sort+"&amp;");
			}else if(category == "성인"){
				new Pager<BookEntity>(list).setSetting(model, "category="+category+"&time="+time+"&title_m="+time_m+"&genre_option="+genre_option+"&sort="+sort+"&author="+author+"&amp;");
			}else{
				new Pager<BookEntity>(list).setSetting(model, "category="+category+"&sort="+sort+"&amp;");
			}
		}
		
		model.addAttribute("activePage", nav);
		model.addAttribute("time_m", time_m);
		
		model.addAttribute("time", time);
		model.addAttribute("category", category);
		model.addAttribute("author", author);
		model.addAttribute("genre_option", genre_option);
		model.addAttribute("sort", sort);
		return INDEX;
	}
	
	
	
	
	
}
