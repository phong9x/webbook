/*
 * Created on 22 Dec 2015 ( Time 09:23:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.web.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.trams.webbook.web.common.AbstractController;
import org.trams.webbook.web.common.ApplicationDefine;
import org.trams.webbook.web.common.FormMode;
import org.trams.webbook.web.common.Pager;
import org.trams.webbook.web.common.Utils;
import org.trams.webbook.web.common.Login;
import org.trams.webbook.web.common.Message;
import org.trams.webbook.web.common.MessageType;
import org.trams.webbook.bean.jpa.CouponPurchaseEntity;
import org.trams.webbook.bean.jpa.CouponUsedEntity;
//--- Entities
import org.trams.webbook.bean.CouponPurchase;
import org.trams.webbook.bean.CouponUsed;
import org.trams.webbook.bean.User;
import org.trams.webbook.business.service.CategoryService;
//--- Services 
import org.trams.webbook.business.service.CouponPurchaseService;
import org.trams.webbook.business.service.CouponUsedService;
import org.trams.webbook.business.service.UserService;


/**
 * Spring MVC controller for 'CouponPurchase' management.
 */
@Controller
@RequestMapping("/coupon")
public class CouponController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "couponPurchase";
	private static final String MAIN_LIST_NAME = "list";

	private static final String TOTAL_PAGE   = "pages";

	private static final String CURRENT_PAGE   = "pageNumber";

	private static final String LIST_PAGES   = "listPages";

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "my_page";
	private static String mav = "coupon";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_COUPON   = "coupon";
	private static final String JSP_COUPON_CHARGE   = "coupon/coupon_charge";
	private static final String JSP_LOGIN   = "redirect:/login";

	//--- Main entity service
	@Resource
    private CouponPurchaseService couponPurchaseService; // Injected by Spring
	@Resource
    private CouponUsedService couponUsedService;
	@Resource
    private CategoryService categoryService;
	@Resource
    private UserService userService;
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public CouponController() {
		super(CouponController.class, MAIN_ENTITY_NAME );
		log("CouponPurchaseController created.");
	}
	//Decription:Get all infomation coupon by user
	//Url: 		http://kwebsosul.com/coupon
	@RequestMapping("")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="type",defaultValue="id") String type,
			@RequestParam(value="key",defaultValue="") String key,
			HttpSession session,
			Model model) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		User u=Login.getUserLogin(session);
		u=userService.findById(u.getId());
		List<CouponPurchaseEntity> listCouponPurchase = null;
		List<CouponUsedEntity> listCouponUsed = null;
		listCouponPurchase=couponPurchaseService.listByUserId(u.getId());
		listCouponUsed=couponUsedService.listBy_UserId(u.getId());
		model.addAttribute(MAIN_LIST_NAME, listCouponUsed);	
		model.addAttribute("key", key);
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("activeMenu", mav);
		model.addAttribute("listCouponPurchase", listCouponPurchase);
		model.addAttribute("listCouponUsed", listCouponUsed);
		model.addAttribute("u", u);
		return JSP_COUPON;
	}

	//Decription:coupon charge page
	//Url: 		http://kwebsosul.com/coupon/coupon_charge
	@RequestMapping("/coupon_charge")
	public String detail(
	@RequestParam(value="amount",defaultValue="0") Integer amount,
	@RequestParam(value="payment_method",defaultValue="") String payment_method,
	@RequestParam(value="payment",defaultValue="0") Integer payment,
	@RequestParam(value="tid_success",defaultValue="") String tid,
	Model model, 
	HttpSession session
	) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		Date dt =new Date();
		Calendar ct = Calendar.getInstance(); 
		ct.setTime(dt); 
		ct.add(Calendar.DAY_OF_YEAR, 3);
		dt = ct.getTime();
		model.addAttribute("day", dt);
		User user =Login.getUserLogin(session);
			if(payment_method!=null && amount>0 && tid!=null && tid!=""){
				try {
					CouponPurchase c= new CouponPurchase();
					c.setCreateDate(new Date());
					c.setIsDelete(0);
					String split[] = payment_method.split("@");
					Integer methodId=Utils.parseInt(split[0]) ;
					c.setPaymentMethodId(methodId);
					c.setPaymentMethodName(split[1]);
					
					if(amount==30){
						c.setTotalFee(3000.0);
						c.setChargeAmount(30);
					}else if(amount==50){
						c.setTotalFee(5000.0);
						c.setChargeAmount(50);
					}else if(amount==107){
						c.setTotalFee(10000.0);
						c.setChargeAmount(107);
					}else if(amount==320){
						c.setTotalFee(30000.0);
						c.setChargeAmount(320);
					}else if(amount==550){
						c.setTotalFee(50000.0);
						c.setChargeAmount(550);
					}else{
						c.setTotalFee(0.0);
					}
					if(methodId==ApplicationDefine.PAYMENT_METHOD_BANK_TRANFER_ID){
						c.setStatus(0);
					}else{
						c.setStatus(1);
					}
					c.setTid(tid);
					c.setUpdateDate(new Date());
					c.setUserId(user.getId());
					CouponPurchase create =couponPurchaseService.create(c);
					if(create!=null && create.getPaymentMethodId()!=ApplicationDefine.PAYMENT_METHOD_BANK_TRANFER_ID){
							user.setTotalCoupon(user.getTotalCoupon()+create.getChargeAmount());
							User u = userService.update(user);
							Login.save(u, session);
					}
					return "redirect:/coupon";
				} catch (Exception e) {
					System.out.println(e);
				}
			}
		model.addAttribute("user", user);
		model.addAttribute("activeMenu", mav);
		model.addAttribute("activePage", nav);
		model.addAttribute("listCategory", categoryService.findByGroupId(12));
		return JSP_COUPON_CHARGE;
	}
	
	
	
}
