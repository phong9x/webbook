/*
 * Created on 3 Mar 2016 ( Time 10:45:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.web.admin.controller;

import java.util.LinkedList;
import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.trams.webbook.web.common.AbstractController;
import org.trams.webbook.web.common.FormMode;
import org.trams.webbook.web.common.Pager;
import org.trams.webbook.web.common.Login;
import org.trams.webbook.web.common.Message;
import org.trams.webbook.web.common.MessageType;
import org.trams.webbook.bean.jpa.CommentEntity;
import org.trams.webbook.bean.jpa.ContactUsEntity;
import org.trams.webbook.bean.Comment;
//--- Entities
import org.trams.webbook.bean.ContactUs;
import org.trams.webbook.bean.User;
import org.trams.webbook.business.service.CommentService;
//--- Services 
import org.trams.webbook.business.service.ContactUsService;
import org.trams.webbook.business.service.UserService;
import org.trams.webbook.business.service.mapping.CommentServiceMapper;
//--- List Items 
import org.trams.webbook.web.listitem.UserListItem;

/**
 * Spring MVC controller for 'ContactUs' management.
 */
@Controller
@RequestMapping("/admin/contactUs")
public class ContactUsAdminController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "contactUs";
	private static final String MAIN_LIST_NAME = "list";

	private static final String TOTAL_PAGE   = "pages";

	private static final String CURRENT_PAGE   = 	"pageNumber";

	private static final String LIST_PAGES   = "listPages";

	private static final Integer PAGE_SIZE   = 10;

	private static String nav = "contact";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "admin/contactUs/create";
	private static final String JSP_LIST   = "admin/contactUs/list";
	private static final String JSP_PAGING   = "admin/contactUs";
	private static final String JSP_EDIT   = "admin/contactUs/edit";
	private static final String JSP_DETAIL   = "admin/contactUs/detail";
	private static final String JSP_LOGIN   = "redirect:/admin/login";

	//--- Main entity service
	@Resource
    private ContactUsService contactUsService; // Injected by Spring
	//--- Other service(s)
	@Resource
    private UserService userService; // Injected by Spring
	@Resource
    private CommentService commentService; // Injected by Spring
	@Resource
    private CommentServiceMapper commentServiceMapper;

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public ContactUsAdminController() {
		super(ContactUsAdminController.class, MAIN_ENTITY_NAME );
		log("ContactUsAdminController created.");
	}
	//Decription: List all in 1:1문의 page
	//Url: http://kwebsosul.com/admin/contactUs/list
	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="type",defaultValue="id") String type,
			@RequestParam(value="key",defaultValue="") String key,
			@RequestParam(value="delete",defaultValue="0") Integer delete,
			HttpSession session,
			Model model) {
		if(Login.checkAdminLogin(session)=="0")
			return JSP_LOGIN;
		if(delete>0){
			try {
				ContactUs us= contactUsService.findById(delete);
				us.setIsDelete(1);
				contactUsService.update(us);
			} catch (Exception e) {
				
			}
		}
		Page<ContactUsEntity> listPage = null;
		listPage=contactUsService.listPaging(page, PAGE_SIZE);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("key", key);
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("pagination_navigator", "/contactUs/list");
		new Pager<ContactUsEntity>(listPage).setSetting(model, "type="+type+"&amp;key="+key+"&amp;");		
		return JSP_LIST;
	}

	//Decription: detail question in 1:1문의
	//Url: http://kwebsosul.com/admin/contactUs/detail/3
	@RequestMapping("/detail/{id}")
	public String detail(
	@RequestParam(value="delete",defaultValue="0") Integer delete,
	@RequestParam(value="comment",defaultValue="") String comment,
	Model model,
	HttpSession session, 
	@PathVariable("id") Integer id) {
		if(Login.checkAdminLogin(session)=="0")
			return JSP_LOGIN;
		if(delete>0){
			try {
				ContactUs us= contactUsService.findById(delete);
				us.setIsDelete(1);
				contactUsService.update(us);
				return "redirect:/admin/contactUs/list";
			} catch (Exception e) {
				
			}
		}
		Page<CommentEntity> listComment =commentService.findAllBy_ParentId_Type(id, "CONTACT", 1, 1);
		Comment c=new Comment();
		if(listComment.getContent().size()>0){
			c= commentServiceMapper.mapCommentEntityToComment(listComment.getContent().get(0));
		}
		if(comment!=null){
			try {
				User u =Login.getAdminLogin(session);
				c.setComment(comment);
				c.setCreateDate(new Date());
				c.setIsDelete(0);
				c.setParentId(id);
				c.setReportNumber(0);
				c.setTypeKey("CONTACT");
				c.setUpdateDate(new Date());
				c.setUserId(u.getId());
				if(c.getId()!=null){
					c=commentService.update(c);
				}else{
					c=commentService.create(c);
				}
				
			} catch (Exception e) {
				System.err.println(e);
			}
		}
		model.addAttribute("c", c);
		ContactUsEntity contactUs = contactUsService.findOne(id);
		model.addAttribute("item", contactUs);
		return JSP_DETAIL;
	}
	
	@RequestMapping(value = "/edit/{id}")
	public String update(
	@RequestParam(value="edit",defaultValue="0") Integer edit,
	HttpSession session,
	@PathVariable("id") Integer id,
	Model model  ) {
	if(Login.checkAdminLogin(session)=="0")
			return JSP_LOGIN;
ContactUs contactUs = contactUsService.findById(id);
		try {
			if(edit>0){
				contactUs.setUpdateDate(new Date());
				contactUs = contactUsService.update(contactUs);
			}
			model.addAttribute("item", contactUs);
			return JSP_EDIT;
		} catch(Exception e) {
			return JSP_LIST;
		}
	}
	
	@RequestMapping(value = "/create" ) // GET or POST
	public String create(
			@RequestParam(value="create",defaultValue="0") Integer create,
			HttpSession session,
			Model model) {
		log("Action 'create'");
		if(Login.checkAdminLogin(session)=="0")
			return JSP_LOGIN;
		try {
			if(create>0){
			ContactUs contactUs = new ContactUs();
			
			contactUs.setUpdateDate(new Date());
			contactUs.setCreateDate(new Date());
			contactUsService.create(contactUs);
			}
			return JSP_LIST;
		} catch(Exception e) {
			
			return JSP_CREATE;
		}
	}

	@RequestMapping(value = "/delete/{id}")
	public String delete(Model model, @PathVariable("id") Integer id ) {
	if(Login.checkLogin()=="0")
			return JSP_LOGIN;
		contactUsService.delete(id);
		return JSP_LIST;
	}

}
