/*
 * Created on 5 Jan 2016 ( Time 17:10:36 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.web.controller;

import java.util.List;
import java.util.ArrayList;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

//--- Common classes
import org.trams.webbook.web.common.AbstractController;
import org.trams.webbook.web.common.FormMode;
import org.trams.webbook.web.common.Pager;
import org.trams.webbook.web.common.Login;
import org.trams.webbook.web.common.Message;
import org.trams.webbook.web.common.MessageType;
import org.trams.webbook.bean.jpa.InterestedBookEntity;

//--- Entities
import org.trams.webbook.bean.InterestedBook;

//--- Services 
import org.trams.webbook.business.service.InterestedBookService;


/**
 * Spring MVC controller for 'InterestedBook' management.
 */
@Controller
@RequestMapping("/interestedBook")
public class InterestedBookController extends AbstractController {

	//--- Variables names ( to be used in JSP with Expression Language )
	private static final String MAIN_ENTITY_NAME = "interestedBook";
	private static final String MAIN_LIST_NAME = "list";

	private static final String TOTAL_PAGE   = "pages";

	private static final String CURRENT_PAGE   = "pageNumber";

	private static final String LIST_PAGES   = "listPages";

	private static final Integer PAGE_SIZE   = 15;

	private static String nav = "interestedBook";

	//--- JSP pages names ( View name in the MVC model )
	private static final String JSP_CREATE   = "interestedBook/create";
	private static final String JSP_LIST   = "interestedBook/list";
	private static final String JSP_PAGING   = "interestedBook";
	private static final String JSP_EDIT   = "interestedBook/edit";
	private static final String JSP_DETAIL   = "interestedBook/detail";
	private static final String JSP_LOGIN   = "redirect:/login";

	//--- Main entity service
	@Resource
    private InterestedBookService interestedBookService; // Injected by Spring
	//--- Other service(s)

	//--------------------------------------------------------------------------------------
	/**
	 * Default constructor
	 */
	public InterestedBookController() {
		super(InterestedBookController.class, MAIN_ENTITY_NAME );
		log("InterestedBookController created.");
	}

	@RequestMapping("/list")
	public String list(
			@RequestParam(value="page",defaultValue="1") Integer page,
			@RequestParam(value="type",defaultValue="id") String type,
			@RequestParam(value="key",defaultValue="") String key,
			HttpSession session,
			Model model) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		Page<InterestedBookEntity> listPage = null;
		listPage=interestedBookService.findAll(page);
		model.addAttribute(MAIN_LIST_NAME, listPage);	
		model.addAttribute("key", key);
		model.addAttribute("type", type);
		model.addAttribute("activePage", nav);
		model.addAttribute("pagination_navigator", "/interestedBook/list");
		new Pager<InterestedBookEntity>(listPage).setSetting(model, "type="+type+"&amp;key="+key+"&amp;");		
		return JSP_LIST;
	}

	
	@RequestMapping("/detail/{id}")
	public String detail(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id) {
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		InterestedBook interestedBook = interestedBookService.findById(id);
		model.addAttribute("interestedBook", interestedBook);
		return JSP_DETAIL;
	}
	
	@RequestMapping(value = "/edit/{id}")
	public String update(
	@RequestParam(value="edit",defaultValue="0") Integer edit,
	HttpSession session,
	@PathVariable("id") Integer id,
	Model model  ) {
	if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
InterestedBook interestedBook = interestedBookService.findById(id);
		try {
			if(edit>0){
				interestedBook = interestedBookService.update(interestedBook);
				interestedBook.setUpdateDate(new Date());
				
			}
			model.addAttribute("item", interestedBook);
			return JSP_EDIT;
		} catch(Exception e) {
			return JSP_LIST;
		}
	}
	
	@RequestMapping(value = "/create" ) // GET or POST
	public String create(
			@RequestParam(value="create",defaultValue="0") Integer create,
			HttpSession session,
			Model model) {
		log("Action 'create'");
		if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		try {
			if(create>0){
			InterestedBook interestedBook = new InterestedBook();
			interestedBook.setUpdateDate(new Date());
			interestedBook.setCreateDate(new Date());
			interestedBookService.create(interestedBook);
			}
			return JSP_LIST;
		} catch(Exception e) {
			
			return JSP_CREATE;
		}
	}

	@RequestMapping(value = "/delete/{id}")
	public String delete(
	Model model, 
	HttpSession session,
	@PathVariable("id") Integer id ) {
	if(Login.checkLogin(session)=="0")
			return JSP_LOGIN;
		interestedBookService.delete(id);
		return JSP_LIST;
	}

}
