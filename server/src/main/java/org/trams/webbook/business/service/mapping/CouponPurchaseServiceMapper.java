/*
 * Created on 11 Jan 2016 ( Time 16:14:58 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.webbook.bean.CouponPurchase;
import org.trams.webbook.bean.jpa.CouponPurchaseEntity;
import org.trams.webbook.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class CouponPurchaseServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public CouponPurchaseServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'CouponPurchaseEntity' to 'CouponPurchase'
	 * @param couponPurchaseEntity
	 */
	public CouponPurchase mapCouponPurchaseEntityToCouponPurchase(CouponPurchaseEntity couponPurchaseEntity) {
		if(couponPurchaseEntity == null) {
			return null;
		}

		//--- Generic mapping 
		CouponPurchase couponPurchase = map(couponPurchaseEntity, CouponPurchase.class);

		//--- Link mapping ( link to User )
		if(couponPurchaseEntity.getUser() != null) {
			couponPurchase.setUserId(couponPurchaseEntity.getUser().getId());
		}
		return couponPurchase;
	}
	
	/**
	 * Mapping from 'CouponPurchase' to 'CouponPurchaseEntity'
	 * @param couponPurchase
	 * @param couponPurchaseEntity
	 */
	public void mapCouponPurchaseToCouponPurchaseEntity(CouponPurchase couponPurchase, CouponPurchaseEntity couponPurchaseEntity) {
		if(couponPurchase == null) {
			return;
		}

		//--- Generic mapping 
		map(couponPurchase, couponPurchaseEntity);

		//--- Link mapping ( link : couponPurchase )
		if( hasLinkToUser(couponPurchase) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( couponPurchase.getUserId() );
			couponPurchaseEntity.setUser( user1 );
		} else {
			couponPurchaseEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(CouponPurchase couponPurchase) {
		if(couponPurchase.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}