/*
 * Created on 16 Feb 2016 ( Time 10:22:03 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.webbook.bean.Book;
import org.trams.webbook.bean.jpa.BookEntity;
import org.trams.webbook.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class BookServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public BookServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'BookEntity' to 'Book'
	 * @param bookEntity
	 */
	public Book mapBookEntityToBook(BookEntity bookEntity) {
		if(bookEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Book book = map(bookEntity, Book.class);

		//--- Link mapping ( link to User )
		if(bookEntity.getUser() != null) {
			book.setUserId(bookEntity.getUser().getId());
		}
		return book;
	}
	
	/**
	 * Mapping from 'Book' to 'BookEntity'
	 * @param book
	 * @param bookEntity
	 */
	public void mapBookToBookEntity(Book book, BookEntity bookEntity) {
		if(book == null) {
			return;
		}

		//--- Generic mapping 
		map(book, bookEntity);

		//--- Link mapping ( link : book )
		if( hasLinkToUser(book) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( book.getUserId() );
			bookEntity.setUser( user1 );
		} else {
			bookEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(Book book) {
		if(book.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}