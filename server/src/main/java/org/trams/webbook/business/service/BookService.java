/*
 * Created on 15 Dec 2015 ( Time 17:20:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.business.service;

import java.util.List;
import org.trams.webbook.bean.jpa.BookEntity;
import org.trams.webbook.bean.jpa.CategoryEntity;
import org.trams.webbook.bean.jpa.CommentEntity;
import org.trams.webbook.web.item.StatisticBook;
import org.trams.webbook.bean.Book;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Business Service Interface for entity Book.
 */
public interface BookService { 

	/**
	 * Loads an entity from the database using its Primary Key
	 * @param id
	 * @return entity
	 */
	Book findById( Integer id  ) ;

	/** 
	 * Loads all entities.
	 * @return all entities
	 */
	List<Book> findAll();
	
	/**
	 * Loads entities in page number.
	 * @return entities
	 */

	Page<BookEntity> findAll(Integer page);

	/**
	 * Count all entities
	 * @return Long
	 */
	Long countTotal();
	

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	Book save(Book entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	Book update(Book entity);

	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	Book create(Book entity);
	
	/**
	 * Deletes an entity using its Primary Key
	 * @param id
	 */
	void delete( Integer id );
	
	BookEntity findOne(Integer id);
	
	Page<BookEntity> listPaging(Integer page,Integer size);
	
	Integer totalBook();
	
	Integer totalNewBook();
	
	StatisticBook calculateBook();
	
	Page<BookEntity> listPagingSearchAll(String genre,String age_group,String league,String adult,String userNickname,String title,Integer page , Integer size);
	
	Page<BookEntity> listPagingSearchBookComplete(String genre,String age_group,String league,String adult,String userNickname,String title,Integer page , Integer size);
	
	Page<BookEntity> listMyBoook(Integer userid,Integer page , Integer size);
	Page<BookEntity> searchBoook(Integer page,Integer size,Integer age,Integer leafue, String order);
	Page<BookEntity> searchByAuthorLevel(String time,Integer authorLevel,Integer page,Integer size, String order);
	

	
	Page<BookEntity> searchOfficalAuthorAdult(String time,Integer authorLevel,Integer page,Integer size, String order,String adult);
	Page<BookEntity> searchOfficalAuthorComplate(String time,Integer authorLevel,Integer page,Integer size, String order,Integer complate,String adult);

	Page<CommentEntity> listCommentReport(String typekey, Integer page, Integer size);
	
	List<BookEntity> list_15_Book_Weekly_Hit(Integer leagueId,Integer size);
	List<BookEntity> list_Weekly_By_AgeGroup_League(Integer leagueId,Integer ageGroupId);
	List<BookEntity> list_Best_League();
	Page<BookEntity> searchBookBy_LeagueName_Title(Integer leagueId,String title,Integer page, Integer size);
	Page<BookEntity> searchBookBy_Title(String title,Integer leagueId, Integer page, Integer size);
	void update_Weekly_Book();
	
	Page<BookEntity> searchOfficalAuthorBy_Time_Author_Gender(String time, String genre, String adult,Integer leagueName,Integer page , Integer size, String order);
	Page<BookEntity> searchOfficalAuthorBy_Time_Author_Gender_Complete(String time, String genre, String adult, Integer complete,Integer leagueName,Integer page , Integer size, String order);
	
	Page<BookEntity> searchBy_Time_Author_Gender_Complete(String time, String genre, String adult, Integer complete,Integer page , Integer size, String order);
	Page<BookEntity> searchBy_Time_Author_Gender(String time, String genre, String adult,String league,Integer page , Integer size, String order);
	
}
