/*
 * Created on 2 Mar 2016 ( Time 13:16:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.trams.webbook.bean.ContactUs;
import org.trams.webbook.bean.jpa.ContactUsEntity;
import org.trams.webbook.bean.jpa.UserEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class ContactUsServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public ContactUsServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'ContactUsEntity' to 'ContactUs'
	 * @param contactUsEntity
	 */
	public ContactUs mapContactUsEntityToContactUs(ContactUsEntity contactUsEntity) {
		if(contactUsEntity == null) {
			return null;
		}

		//--- Generic mapping 
		ContactUs contactUs = map(contactUsEntity, ContactUs.class);

		//--- Link mapping ( link to User )
		if(contactUsEntity.getUser() != null) {
			contactUs.setUserId(contactUsEntity.getUser().getId());
		}
		return contactUs;
	}
	
	/**
	 * Mapping from 'ContactUs' to 'ContactUsEntity'
	 * @param contactUs
	 * @param contactUsEntity
	 */
	public void mapContactUsToContactUsEntity(ContactUs contactUs, ContactUsEntity contactUsEntity) {
		if(contactUs == null) {
			return;
		}

		//--- Generic mapping 
		map(contactUs, contactUsEntity);

		//--- Link mapping ( link : contactUs )
		if( hasLinkToUser(contactUs) ) {
			UserEntity user1 = new UserEntity();
			user1.setId( contactUs.getUserId() );
			contactUsEntity.setUser( user1 );
		} else {
			contactUsEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(ContactUs contactUs) {
		if(contactUs.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}