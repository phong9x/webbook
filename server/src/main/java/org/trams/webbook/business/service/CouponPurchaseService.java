/*
 * Created on 15 Dec 2015 ( Time 17:20:39 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.trams.webbook.business.service;

import java.util.Date;
import java.util.List;

import org.trams.webbook.bean.jpa.CategoryEntity;
import org.trams.webbook.bean.jpa.CouponPurchaseEntity;
import org.trams.webbook.bean.jpa.CouponUsedEntity;
import org.trams.webbook.web.item.StatisticCoupon;
import org.trams.webbook.web.item.StatisticMember;
import org.trams.webbook.bean.CouponPurchase;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

/**
 * Business Service Interface for entity CouponPurchase.
 */
public interface CouponPurchaseService { 

	/**
	 * Loads an entity from the database using its Primary Key
	 * @param id
	 * @return entity
	 */
	CouponPurchase findById( Integer id  ) ;

	/** 
	 * Loads all entities.
	 * @return all entities
	 */
	List<CouponPurchase> findAll();
	
	/**
	 * Loads entities in page number.
	 * @return entities
	 */

	Page<CouponPurchaseEntity> findAll(Integer page);

	/**
	 * Count all entities
	 * @return Long
	 */
	Long countTotal();
	

	/**
	 * Saves the given entity in the database (create or update)
	 * @param entity
	 * @return entity
	 */
	CouponPurchase save(CouponPurchase entity);

	/**
	 * Updates the given entity in the database
	 * @param entity
	 * @return
	 */
	CouponPurchase update(CouponPurchase entity);

	/**
	 * Creates the given entity in the database
	 * @param entity
	 * @return
	 */
	CouponPurchase create(CouponPurchase entity);
	
	/**
	 * Deletes an entity using its Primary Key
	 * @param id
	 */
	void delete( Integer id );
	
	Page<CouponPurchaseEntity> listPaging(Integer page,Integer size);
Integer totalCouponChargingNumber();
	
	Integer totalRecentCouponChargingNumber();
	
	Integer totalCouponChargingAmount();
	
	Integer totalRecentCouponChargingAmount();
	
	StatisticCoupon calculateCoupon();
	
	List<CouponPurchaseEntity> listByUserId(Integer userid);
	
	Page<CouponPurchaseEntity> listPagingSearch(String id, String nickname, Integer page, Integer size);

	Integer totalChargeAmount(Date from, Date to);
	
	Integer totalCountUserID(Date from, Date to);
	
	Integer totalCount3000(Date from, Date to);
	
	Integer totalCount5000(Date from, Date to);
	
	Integer totalCount10000(Date from, Date to);
	
	Integer totalCount30000(Date from, Date to);
	
	Integer totalCount50000(Date from, Date to);

	CouponPurchaseEntity findOne(Integer id);

	List<CategoryEntity> findByGroupId(Integer groupId);
	
	Page<CouponPurchaseEntity> listPagingBy_UserId_Refund(Integer userid, Integer page, Integer size);
	
	Integer totalAmountPurchase_UserId(Integer userid);
	
	Page<CouponPurchaseEntity> listPagingSearch_ByTime(String id, String nickname,Date from,Date to,Integer page, Integer size);
	
	Integer totalChargeAmount();
	
	Integer totalCountUserID();
	
	Integer totalCount3000();
	
	Integer totalCount5000();
	
	Integer totalCount10000();
	
	Integer totalCount30000();
	
	Integer totalCount50000();
	
}
